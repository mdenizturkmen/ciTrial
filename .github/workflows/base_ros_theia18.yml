# This is a basic workflow to help you get started with Actions

name: CI7_base_ros_theia18

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
    paths: 
      - 'Dockerfiles18/base_ros_theia/Dockerfile'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check Out Repo
        uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!
      
      #######################################################################################################
      #######################################################################################################
      
      #######################################################################################################
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      #######################################################################################################
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      #######################################################################################################
      - name: Build and push
        id: docker_build1
        uses: docker/build-push-action@v2
        with:
          context: ./Dockerfiles18/base_ros_theia
          file: ./Dockerfiles18/base_ros_theia/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/base_ros_theia18:latest
          cache-from: type=registry,ref=dnztrkmn/base_ros_theia18:buildcache
          cache-to: type=registry,ref=dnztrkmn/base_ros_theia18:buildcache,mode=max
       #######################################################################################################
      #######################################################################################################
      #######################################################################################################
      #######################################################################################################
      - name: Run Snyk to check Docker image for vulnerabilities
        # Snyk can be used to break the build when it detects vulnerabilities.
        # In this case we want to upload the issues to GitHub Code Scanning
        continue-on-error: true
        uses: snyk/actions/docker@master
        env:
          # In order to use the Snyk Action you will need to have a Snyk API token.
          # More details in https://github.com/snyk/actions#getting-your-snyk-token
          # or you can signup for free at https://snyk.io/login
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ${{ secrets.DOCKER_HUB_USERNAME }}/base_ros_theia18:latest
          args: --file=Dockerfiles18/base_ros_theia/Dockerfile
     
      #######################################################################################################
      #######################################################################################################
      #######################################################################################################
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: snyk.sarif
      #######################################################################################################
      
      
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
